@font-face {
    font-family: "Stratum2";
    src: url('./fonts/Stratum2WebRegular.woff') format('woff');
    font-weight: normal; /* 400 */
    font-style: normal;
}

@font-face {
    font-family: "Stratum2";
    src: url('./fonts/Stratum2WebMedium.woff') format('woff');
    font-weight: 500; /* Medium */
    font-style: normal;
}

@font-face {
    font-family: "Stratum2";
    src: url('./fonts/Stratum2WebBold.woff') format('woff');
    font-weight: bold; /* 700 */
    font-style: normal;
}


body {
    font-family: "Stratum2", "Anta", sans-serif;
    overflow-x: hidden;
}

.full-height-wrapper{
    flex-direction: row;
    height: 100vh;
}

#core-wrapper{
    flex: 1;
}

#header, #footer{
    height: 3vh;
    padding-left: 1%;
    padding-right: 1%;
}
.bg-teams{
    background: #FC354C;  /* fallback for old browsers */
    background: -webkit-linear-gradient(to left, #0ABFBC, #FC354C);  /* Chrome 10-25, Safari 5.1-6 */
    background: linear-gradient(to left, #0ABFBC, #FC354C); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
}
.bg-teams-bak{
    background: #659999;  /* fallback for old browsers */
    background: -webkit-linear-gradient(to left, #659999, #f4791f);  /* Chrome 10-25, Safari 5.1-6 */
    background: linear-gradient(to left, #659999, #f4791f); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
}

.win-t{
    background: #ff5f11;
    color: white;
    animation: team-win-flicker-t 2s 2 forwards ease-in-out;
}
.win-ct{
    background: #002f55;
    color: white;
    animation: team-win-flicker-ct 2s 2 forwards ease-in-out;
}
@keyframes team-win-flicker-t {
    0%, 12%, 25%, 37%, 50%, 62%, 75%, 87%, 100% { background: transparent; color: #ff5f11; }
    6%, 18%, 31%, 43%, 56%, 68%, 81%, 93% { background: #ff5f11; color: white; }
}

@keyframes team-win-flicker-ct {
    0%, 12%, 25%, 37%, 50%, 62%, 75%, 87%, 100% { background: transparent; color: #002f55; }
    6%, 18%, 31%, 43%, 56%, 68%, 81%, 93% { background: #002f55; color: white; }
}


#match-status-wrapper{
    filter: drop-shadow(2px 2px 40px black);
}
.team-box{
    width: 15vw;
}
#score-box, .team-box{
    font-size: 8rem;
    font-weight: bold;
}

#event-text-wrapper {
    --init-width: 25vw;
    --init-width-bitmore: 30vw;
    --large-width: 40vw;
    --large-width-bitmore: 45vw;
    width: 30vw;
    overflow: hidden;
    animation: expandToInitWidth 3s forwards ease-in-out; /* Example duration of 2s */
    white-space: nowrap;
}

/* Animation to shrink */
@keyframes fromInitWidthShrink {
    0% { width: var(--init-width); }
    10% { width: var(--init-width-bitmore); }
    100% { width: 0vw; }
}
@keyframes fromLargeWidthShrink {
    0% { width: var(--large-width); }
    10% { width: var(--large-width-bitmore); }
    100% { width: 0vw; }
}
@keyframes expandToInitWidth {
    0% { width: 0vw; }
    90% { width: var(--init-width-bitmore); }
    100% { width: var(--init-width); }
}
@keyframes expandToLargeWidth {
    0% { width: 0vw; }
    90% { width: var(--large-width-bitmore); }
    100% { width: var(--large-width); }
}

.event-text{
    font-size: 4rem;
    white-space: nowrap;
}

#bomb > * {
    font-size: 2rem;
    filter: drop-shadow(2px 4px 6px black);
    color: var(--bs-danger);
}

#bomb.bomb-defused > *{
    color: var(--bs-success);
}

#bomb.bomb-defused > .swapping-squares-spinner, #bomb.bomb-defused > .swapping-squares-spinner > * {
    animation-play-state: paused !important;
    border-color: var(--bs-success) !important;
}
#bomb.bomb-planted > span#bomb-state-planted{
    display: initial;
}
#bomb.bomb-planted > span#bomb-state-exploded, #bomb.bomb-planted > span#bomb-state-defused, #bomb.bomb-planted > span#bomb-state-exploded{
    display: none;
}

#bomb.bomb-defused > span#bomb-state-defused{
    display: initial;
}
#bomb.bomb-defused > span#bomb-state-planted, #bomb.bomb-defused > span#bomb-state-exploded{
    display: none;
}
#bomb.bomb-exploded > span#bomb-state-exploded{
    display: initial;
}
#bomb.bomb-exploded > span#bomb-state-defused, #bomb.bomb-exploded > span#bomb-state-planted {
    display: none;
}
#bomb.bomb-exploded > div.swapping-squares-spinner {
  animation: bombExploded 1s 4 ease-in-out;
}

#bomb.bomb-exploded > *{
    color: var(--bs-orange);
}
#bomb.bomb-exploded > .swapping-squares-spinner, #bomb.bomb-exploded > .swapping-squares-spinner > * {
    border-color: var(--bs-orange) !important;
}
#bomb.bomb-exploded > .swapping-squares-spinner > * {
    animation-play-state: paused;
}

@keyframes tickEffect {
  0%, 45%, 55%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(2);
  }
}
.swapping-squares-spinner, .swapping-squares-spinner * {
  box-sizing: border-box;
}

.swapping-squares-spinner {
  height: 65px;
  width: 65px;
  position: relative;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  animation: tickEffect 1s infinite ease-in-out;
  animation-delay: 1s;
  border-color: var(--bs-danger) !important;
}

/*the animation definition*/
@keyframes bombExploded {
  0%, 100% {
    -webkit-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0)
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    -webkit-transform: translate3d(-10px, 0, 0);
    -ms-transform: translate3d(-10px, 0, 0);
    transform: translate3d(-10px, 0, 0)
  }
  20%,
  40%,
  60%,
  80% {
    -webkit-transform: translate3d(10px, 0, 0);
    -ms-transform: translate3d(10px, 0, 0);
    transform: translate3d(10px, 0, 0)
  }
}

.swapping-squares-spinner .square {
  height: calc(65px * 0.25 / 1.3);
  width:  calc(65px * 0.25 / 1.3);
  animation-duration: 1000ms;
  border: calc(65px * 0.04 / 1.3) solid var(--bs-danger);
  margin-right: auto;
  margin-left: auto;
  position: absolute;
  animation-iteration-count: infinite;
}

.swapping-squares-spinner .square:nth-child(1) {
  animation-name: swapping-squares-animation-child-1;
  animation-delay: 500ms;
}

.swapping-squares-spinner .square:nth-child(2) {
  animation-name: swapping-squares-animation-child-2;
  animation-delay: 0ms;
}

.swapping-squares-spinner .square:nth-child(3) {
  animation-name: swapping-squares-animation-child-3;
  animation-delay: 500ms;
}

.swapping-squares-spinner .square:nth-child(4) {
  animation-name: swapping-squares-animation-child-4;
  animation-delay: 0ms;
}

@keyframes swapping-squares-animation-child-1 {
  50% {
    transform: translate(150%,150%) scale(2,2);
  }
}

@keyframes swapping-squares-animation-child-2 {
  50% {
    transform: translate(-150%,150%) scale(2,2);
  }
}

@keyframes swapping-squares-animation-child-3 {
  50% {
    transform: translate(-150%,-150%) scale(2,2);
  }
}

@keyframes swapping-squares-animation-child-4 {
  50% {
    transform: translate(150%,-150%) scale(2,2);
  }
}
/* Bomb Ticking End */

#winning-team-wrapper{
    font-size: 2rem;
    overflow: hidden;
    transform-origin: top;
    height: 0%;
}

/* Animation for expanding outwards from the center */
@keyframes slideExpandDown {
    from {
        top: 0%;
        font-size: 2rem;
        height: 0%;
    }
    to {
        top: 0%;
        font-size: 2rem;
        height: 33%;
    }
}

/* Animation for contracting inwards towards the center */
@keyframes slideContractUp {
    from {
        top: 0%;
        height: 33%;
    }
    to {
        top: 0%;
        height: 0%;
    }
}
/* Apply the outwards expansion animation */
.slideExpandDownAnimation {
    animation: slideExpandDown 1s forwards;
}

/* Apply the inwards contraction animation */
.slideContractUpAnimation {
    animation: slideContractUp 1s forwards;
}

.round-time{
    font-size: 8rem;
}
.round-number, .round-number-pre-text {
    width: 8%;
}
#team-ct{
    color: #002f55;
}
#team-t{
    --color-t-bak: #ff5f11;
    color: #ff5f11;
}
#mapmode-wrapper, #round-info-wrapper{
    width: 15%;
}

#t-wrapper{
    margin-left: 1%;
}

#ct-wrapper{
    margin-right: 1%;
}

.player-stats{
    display: initial;
}

#team-spacer{
    margin-right: 1%;
    margin-left: 1%;
    background-image: linear-gradient(#FFF, #FFF);
    background-size: 1px 100%;
    background-repeat: no-repeat;
    background-position: center center;
}

#player-cards-wrapper{
    position: relative;
    min-height: 33vh;
}

.player-card{
    width: 20%;
    background: none;
    border: none;
    margin-left: 1%;
    margin-right: 1%;
}

.player-name{
    font-weight: bold;
}
.dwgh, .beers{
    font-size: 2rem;
}

/* Style for the not-alive state */
.player-card.not-alive .card-body,
.player-card.not-alive .beer-wrapper,
.player-card.not-alive .card-img-top {
    opacity: 0.2;
}
.player-card.not-alive .card-img-top {
    filter: grayscale(100%) sepia(1) hue-rotate(-50deg) brightness(0.9);
}

.player-card.not-alive::before {
    content: 'DEAD';
    position: absolute;
    bottom: 20%;
    left: 50%;
    transform: translate(-50%, 0%) rotate(340deg);
    font-size: 2em;
    color: var(--bs-red);
    font-weight: bold;
    z-index: 3;
    pointer-events: none;
}

.player-card.not-alive .card-img-top {
    filter: grayscale(100%) sepia(1) hue-rotate(-50deg) brightness(0.9);
}

.player-card {
    position: relative;
    overflow: hidden;
}

#logo-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: white;
    border-radius: 50%;
    z-index: 999;
}

.logo {
    width: 15vw; /* Set the width of the logo */
    height: auto; /* Maintain aspect ratio */
}

#mvp-animation-wrapper{
    z-index: 200;
    position: absolute;
    top: 0;
    left: 50%;
    width: 0%;
    height: 100%;
    overflow: hidden;
    transform-origin: center;
    filter: drop-shadow(2px 2px 40px black);

    background: none center repeat-x;
    background-size: auto 100%;
}

#mvp-text-box {
    font-size: 4rem;
    width: 33vw;
    background: rgba(0, 0, 0, 0.41);
    box-shadow: 2px 2px 20px black;
    background: #00000069;

}
#mvp-name {
    font-weight: bold;
    white-space: nowrap;
    overflow: hidden;
}

/* Animation for expanding outwards from the center */
@keyframes expandOutwards {
    from {
        left: 50%;
        width: 0%;
    }
    to {
        left: 0%;
        width: 100%;
    }
}

/* Animation for contracting inwards towards the center */
@keyframes contractInwards {
    from {
        left: 0%;
        width: 100%;
    }
    to {
        left: 50%;
        width: 0%;
    }
}

/* Apply the outwards expansion animation */
.expand-outwards-animation {
    animation: expandOutwards 1s forwards;
}

/* Apply the inwards contraction animation */
.contract-inwards-animation {
    animation: contractInwards 1s forwards;
}